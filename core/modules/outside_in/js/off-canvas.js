/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, Drupal, debounce, displace) {

  'use strict';

  function resetSize(event) {
    var offCanvasDialog = event.data.offCanvasDialog;
    var offsets = displace.offsets;
    var $element = event.data.$element;
    var container = offCanvasDialog.getContainer($element);

    var adjustedOptions = {
      position: {
        my: offCanvasDialog.getEdge() + ' top',
        at: offCanvasDialog.getEdge() + ' top' + (offsets.top !== 0 ? '+' + offsets.top : ''),
        of: window
      }
    };

    container.css({
      position: 'fixed',
      height: $(window).height() - (offsets.top + offsets.bottom) + 'px'
    });

    $element.dialog('option', adjustedOptions).trigger('dialogContentResize.off-canvas');
  }

  function handleDialogResize(event) {
    var $element = event.data.$element;
    var offCanvasDialog = event.data.offCanvasDialog;
    var $container = offCanvasDialog.getContainer($element);

    var $offsets = $container.find('> :not(#drupal-off-canvas, .ui-resizable-handle)');
    var offset = 0;
    var modalHeight;

    $element.css({ height: 'auto' });
    modalHeight = $container.height();
    $offsets.each(function () {
      offset += $(this).outerHeight();
    });

    var scrollOffset = $element.outerHeight() - $element.height();
    $element.height(modalHeight - offset - scrollOffset);
  }

  function bodyPadding(event) {
    var offCanvasDialog = event.data.offCanvasDialog;
    if ($('body').outerWidth() < offCanvasDialog.minDisplaceWidth) {
      return;
    }
    var $element = event.data.$element;
    var $container = offCanvasDialog.getContainer($element);
    var $mainCanvasWrapper = offCanvasDialog.$mainCanvasWrapper;

    var width = $container.outerWidth();
    var mainCanvasPadding = $mainCanvasWrapper.css('padding-' + offCanvasDialog.getEdge());
    if (width !== mainCanvasPadding) {
      $mainCanvasWrapper.css('padding-' + offCanvasDialog.getEdge(), width + 'px');
      $container.attr('data-offset-' + offCanvasDialog.getEdge(), width);
      displace();
    }
  }

  Drupal.offCanvas = {
    minDisplaceWidth: 768,

    $mainCanvasWrapper: $('[data-off-canvas-main-canvas]'),

    isOffCanvas: function isOffCanvas(dialog, $element, settings) {
      return $element.is('#drupal-off-canvas');
    },
    open: function open(event, dialog, $element, settings) {
      $('body').addClass('js-tray-open');
      settings.dialogClass += ' ui-dialog-off-canvas';

      settings.position = {
        my: 'left top',
        at: this.getEdge() + ' top',
        of: window
      };

      settings.height = $(window).height();
    },
    close: function close(event, dialog, $element) {
      $('body').removeClass('js-tray-open');

      $(document).off('.off-canvas');
      $(window).off('.off-canvas');
      this.$mainCanvasWrapper.css('padding-' + this.getEdge(), 0);
    },
    render: function render(event, dialog, $element, settings) {
      var eventData = { settings: settings, $element: $element, offCanvasDialog: this };
      $('.ui-dialog-off-canvas, .ui-dialog-off-canvas .ui-dialog-titlebar').toggleClass('ui-dialog-empty-title', !settings.title);

      $element.on('dialogresize.off-canvas', eventData, debounce(bodyPadding, 100)).on('dialogContentResize.off-canvas', eventData, handleDialogResize).on('dialogContentResize.off-canvas', eventData, debounce(bodyPadding, 100)).trigger('dialogresize.off-canvas');

      this.getContainer($element).attr('data-offset-' + this.getEdge(), '');

      $(window).on('resize.off-canvas scroll.off-canvas', eventData, debounce(resetSize, 100)).trigger('resize.off-canvas');
    },
    handleDialogResize: handleDialogResize,
    resetSize: resetSize,
    bodyPadding: bodyPadding,
    getContainer: function getContainer($element) {
      return $element.dialog('widget');
    },

    getEdge: function getEdge() {
      return document.documentElement.dir === 'rtl' ? 'left' : 'right';
    }
  };

  Drupal.behaviors.offCanvasEvents = {
    attach: function attach() {
      $(window).once('off-canvas').on({
        'dialog:beforecreate': function dialogBeforecreate(event, dialog, $element, settings) {
          if (Drupal.offCanvas.isOffCanvas(dialog, $element, settings)) {
            Drupal.offCanvas.open(event, dialog, $element, settings);
          }
        },
        'dialog:aftercreate': function dialogAftercreate(event, dialog, $element, settings) {
          if (Drupal.offCanvas.isOffCanvas(dialog, $element, settings)) {
            Drupal.offCanvas.render(event, dialog, $element, settings);
          }
        },
        'dialog:beforeclose': function dialogBeforeclose(event, dialog, $element) {
          if (Drupal.offCanvas.render(event, dialog, $element, settings)) {
            Drupal.offCanvas.close(event, dialog, $element);
          }
        }
      });
    }
  };
})(jQuery, Drupal, Drupal.debounce, Drupal.displace);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,