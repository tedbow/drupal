/**
* DO NOT EDIT THIS FILE.
* See the following change record for more information,
* https://www.drupal.org/node/2815083
* @preserve
**/

(function ($, _ref) {
  var ajax = _ref.ajax,
      behaviors = _ref.behaviors;

  behaviors.layoutBuilder = {
    attach: function attach(context) {
      $(context).find('.layout-builder--layout__region').sortable({
        items: '> .draggable',
        connectWith: '.layout-builder--layout__region',
        placeholder: 'ui-state-drop',

        update: function update(event, ui) {
          var itemRegion = ui.item.closest('.layout-builder--layout__region');
          if (event.target === itemRegion[0]) {
            var deltaTo = ui.item.closest('[data-layout-delta]').data('layout-delta');

            var deltaFrom = ui.sender ? ui.sender.closest('[data-layout-delta]').data('layout-delta') : deltaTo;
            ajax({
              url: [ui.item.closest('[data-layout-update-url]').data('layout-update-url'), deltaFrom, deltaTo, itemRegion.data('region'), ui.item.data('layout-block-uuid'), ui.item.prev('[data-layout-block-uuid]').data('layout-block-uuid')].filter(function (element) {
                return element !== undefined;
              }).join('/')
            }).execute();
          }
        }
      });
      $('.layout-builder-block-reorder-previous a').once().on('click.layoutbuilder', function (e) {
        function setContextualLinkFocus(link) {
          var button = $(link).closest('[data-contextual-id]').find('button.trigger');
          $(link).trigger('blur');
          button.trigger('focus');
          var returnEvent = jQuery.Event("keydown");
          returnEvent.which = 13;
          button.trigger(returnEvent);
          $(link).closest('[data-contextual-id]').find('.contextual-links').style('display', 'block');
          var tabEvent = jQuery.Event("keydown");
          tabEvent.which = 9;
          $(document.activeElement).trigger(tabEvent);
          $(document.activeElement).trigger(tabEvent);
          $(document.activeElement).trigger(tabEvent);
        }
        var current = $(e.target).closest('.draggable');

        var prev = current.prev();
        prev.before(current);
        e.preventDefault();
        e.stopPropagation();
        setContextualLinkFocus(e.target);
        return;
        var newNode = document.createElement("span");
        newNode.classList.add('ui-state-drop');

        current.parentNode.insertBefore(newNode, current);
      });
    }
  };
})(jQuery, Drupal);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,